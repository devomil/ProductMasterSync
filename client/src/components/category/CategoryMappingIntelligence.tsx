import { useState } from "react";
import { useQuery, useMutation, useQueryClient } from "@tanstack/react-query";
import {
  GitBranch,
  Brain,
  Zap,
  AlertTriangle,
  CheckCircle,
  ArrowRight,
  Layers,
  Target,
  Globe,
  Settings,
  RefreshCw
} from "lucide-react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Progress } from "@/components/ui/progress";
import { Separator } from "@/components/ui/separator";
import { apiRequest } from "@/lib/queryClient";
import { useToast } from "@/hooks/use-toast";

interface CategoryMapping {
  id: string;
  supplierCategory: string;
  masterCategory: string;
  confidence: number;
  conflicts: string[];
  industry: string;
  autoGenerated: boolean;
}

interface CategoryConflict {
  supplierCategory: string;
  suggestions: string[];
  currentMapping: string;
  suppliers: string[];
}

const CategoryMappingIntelligence = () => {
  const [activeTab, setActiveTab] = useState("overview");
  const { toast } = useToast();
  const queryClient = useQueryClient();

  // Fetch category mappings and conflicts
  const { data: mappings = [], isLoading: mappingsLoading } = useQuery<CategoryMapping[]>({
    queryKey: ['/api/category-mappings'],
  });

  const { data: conflicts = [], isLoading: conflictsLoading } = useQuery<CategoryConflict[]>({
    queryKey: ['/api/category-conflicts'],
  });

  const { data: stats } = useQuery({
    queryKey: ['/api/category-stats'],
  });

  // Auto-resolve conflicts mutation
  const autoResolveMutation = useMutation({
    mutationFn: async (conflictId: string) => {
      return apiRequest(`/api/category-conflicts/${conflictId}/auto-resolve`, {
        method: 'POST'
      });
    },
    onSuccess: () => {
      toast({
        title: "Conflict Resolved",
        description: "Category mapping has been automatically resolved using AI intelligence.",
      });
      queryClient.invalidateQueries({ queryKey: ['/api/category-conflicts'] });
      queryClient.invalidateQueries({ queryKey: ['/api/category-mappings'] });
    }
  });

  // Manual mapping mutation
  const manualMapMutation = useMutation({
    mutationFn: async ({ supplierCategory, masterCategory }: { supplierCategory: string; masterCategory: string }) => {
      return apiRequest('/api/category-mappings', {
        method: 'POST',
        body: JSON.stringify({ supplierCategory, masterCategory })
      });
    },
    onSuccess: () => {
      toast({
        title: "Mapping Created",
        description: "Custom category mapping has been saved successfully.",
      });
      queryClient.invalidateQueries({ queryKey: ['/api/category-mappings'] });
    }
  });

  const IndustryIcon = ({ industry }: { industry: string }) => {
    switch (industry) {
      case 'marine': return <Globe className="h-4 w-4 text-blue-500" />;
      case 'electronics': return <Zap className="h-4 w-4 text-yellow-500" />;
      case 'tools': return <Settings className="h-4 w-4 text-gray-500" />;
      default: return <Layers className="h-4 w-4 text-purple-500" />;
    }
  };

  const ConfidenceIndicator = ({ confidence }: { confidence: number }) => {
    const color = confidence >= 0.8 ? 'text-green-600' : confidence >= 0.6 ? 'text-yellow-600' : 'text-red-600';
    return (
      <div className="flex items-center space-x-2">
        <div className={`w-2 h-2 rounded-full ${confidence >= 0.8 ? 'bg-green-500' : confidence >= 0.6 ? 'bg-yellow-500' : 'bg-red-500'}`} />
        <span className={`text-sm font-medium ${color}`}>{Math.round(confidence * 100)}%</span>
      </div>
    );
  };

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex items-center justify-between">
        <div className="space-y-1">
          <h2 className="text-2xl font-semibold tracking-tight">Category Mapping Intelligence</h2>
          <p className="text-sm text-muted-foreground">
            Automated multi-vendor category management with conflict resolution
          </p>
        </div>
        <Button variant="outline" className="bg-gradient-to-r from-blue-50 to-purple-50">
          <Brain className="mr-2 h-4 w-4" />
          AI Assistant
        </Button>
      </div>

      {/* Stats Overview */}
      {stats && (
        <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
          <Card>
            <CardContent className="pt-6">
              <div className="flex items-center space-x-2">
                <Target className="h-5 w-5 text-blue-500" />
                <div>
                  <p className="text-2xl font-bold">{stats.totalMappings}</p>
                  <p className="text-xs text-muted-foreground">Total Mappings</p>
                </div>
              </div>
            </CardContent>
          </Card>
          <Card>
            <CardContent className="pt-6">
              <div className="flex items-center space-x-2">
                <CheckCircle className="h-5 w-5 text-green-500" />
                <div>
                  <p className="text-2xl font-bold">{stats.autoResolved}</p>
                  <p className="text-xs text-muted-foreground">Auto-Resolved</p>
                </div>
              </div>
            </CardContent>
          </Card>
          <Card>
            <CardContent className="pt-6">
              <div className="flex items-center space-x-2">
                <AlertTriangle className="h-5 w-5 text-yellow-500" />
                <div>
                  <p className="text-2xl font-bold">{conflicts.length}</p>
                  <p className="text-xs text-muted-foreground">Conflicts</p>
                </div>
              </div>
            </CardContent>
          </Card>
          <Card>
            <CardContent className="pt-6">
              <div className="flex items-center space-x-2">
                <Brain className="h-5 w-5 text-purple-500" />
                <div>
                  <p className="text-2xl font-bold">{stats?.avgConfidence ? Math.round(stats.avgConfidence * 100) : 0}%</p>
                  <p className="text-xs text-muted-foreground">Avg Confidence</p>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>
      )}

      <Tabs value={activeTab} onValueChange={setActiveTab} className="space-y-4">
        <TabsList>
          <TabsTrigger value="overview">Overview</TabsTrigger>
          <TabsTrigger value="mappings">Active Mappings</TabsTrigger>
          <TabsTrigger value="conflicts">Conflicts</TabsTrigger>
          <TabsTrigger value="intelligence">AI Intelligence</TabsTrigger>
        </TabsList>

        <TabsContent value="overview" className="space-y-4">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            {/* Category Hierarchy Visualization */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center space-x-2">
                  <GitBranch className="h-5 w-5" />
                  <span>Category Hierarchy</span>
                </CardTitle>
                <CardDescription>
                  Multi-vendor category structure with intelligent merging
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div className="flex items-center space-x-3 p-3 bg-blue-50 rounded-lg">
                    <Globe className="h-5 w-5 text-blue-600" />
                    <div className="flex-1">
                      <p className="font-medium text-sm">Marine Navigation & Instruments</p>
                      <p className="text-xs text-muted-foreground">CWR Supplier • Auto-generated</p>
                    </div>
                    <Badge variant="secondary">Marine</Badge>
                  </div>
                  <div className="pl-6 space-y-2">
                    <div className="flex items-center space-x-3 p-2 bg-gray-50 rounded">
                      <ArrowRight className="h-4 w-4 text-gray-400" />
                      <span className="text-sm">Compasses</span>
                      <Badge variant="outline" className="text-xs">Auto-mapped</Badge>
                    </div>
                    <div className="flex items-center space-x-3 p-2 bg-gray-50 rounded">
                      <ArrowRight className="h-4 w-4 text-gray-400" />
                      <span className="text-sm">GPS Systems</span>
                      <Badge variant="outline" className="text-xs">Auto-mapped</Badge>
                    </div>
                  </div>
                </div>
                <Separator className="my-4" />
                <div className="space-y-4">
                  <div className="flex items-center space-x-3 p-3 bg-yellow-50 rounded-lg">
                    <Zap className="h-5 w-5 text-yellow-600" />
                    <div className="flex-1">
                      <p className="font-medium text-sm">Consumer Electronics</p>
                      <p className="text-xs text-muted-foreground">Future D&H Supplier • Ready for mapping</p>
                    </div>
                    <Badge variant="secondary">Electronics</Badge>
                  </div>
                  <div className="pl-6 space-y-2">
                    <div className="flex items-center space-x-3 p-2 bg-gray-50 rounded">
                      <ArrowRight className="h-4 w-4 text-gray-400" />
                      <span className="text-sm">Smartphones</span>
                      <Badge variant="outline" className="text-xs">Ready</Badge>
                    </div>
                    <div className="flex items-center space-x-3 p-2 bg-gray-50 rounded">
                      <ArrowRight className="h-4 w-4 text-gray-400" />
                      <span className="text-sm">Tablets</span>
                      <Badge variant="outline" className="text-xs">Ready</Badge>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Recent Intelligence Activity */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center space-x-2">
                  <Brain className="h-5 w-5" />
                  <span>Intelligence Activity</span>
                </CardTitle>
                <CardDescription>
                  AI-powered category decisions and automatic resolutions
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div className="flex items-start space-x-3 p-3 bg-green-50 rounded-lg">
                    <CheckCircle className="h-5 w-5 text-green-600 mt-0.5" />
                    <div className="flex-1">
                      <p className="text-sm font-medium">Smart category creation</p>
                      <p className="text-xs text-muted-foreground">
                        Created hierarchical categories from CWR data structure
                      </p>
                      <p className="text-xs text-green-600 mt-1">95% confidence • Active</p>
                    </div>
                  </div>
                  <div className="flex items-start space-x-3 p-3 bg-blue-50 rounded-lg">
                    <Brain className="h-5 w-5 text-blue-600 mt-0.5" />
                    <div className="flex-1">
                      <p className="text-sm font-medium">Industry detection</p>
                      <p className="text-xs text-muted-foreground">
                        Automatically detected marine industry patterns and attributes
                      </p>
                      <p className="text-xs text-blue-600 mt-1">Marine taxonomy • Active</p>
                    </div>
                  </div>
                  <div className="flex items-start space-x-3 p-3 bg-purple-50 rounded-lg">
                    <Target className="h-5 w-5 text-purple-600 mt-0.5" />
                    <div className="flex-1">
                      <p className="text-sm font-medium">Ready for multi-vendor</p>
                      <p className="text-xs text-muted-foreground">
                        System prepared to handle D&H electronics categories intelligently
                      </p>
                      <p className="text-xs text-purple-600 mt-1">Conflict resolution ready • Standby</p>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        <TabsContent value="mappings" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle>Active Category Mappings</CardTitle>
              <CardDescription>
                Current supplier-to-master category mappings with confidence scores
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-3">
                {mappingsLoading ? (
                  <div className="flex items-center space-x-2">
                    <RefreshCw className="h-4 w-4 animate-spin" />
                    <span>Loading mappings...</span>
                  </div>
                ) : mappings.length === 0 ? (
                  <div className="text-center py-8">
                    <GitBranch className="mx-auto h-12 w-12 text-gray-400 mb-3" />
                    <p className="text-muted-foreground">Import CWR data to see intelligent category mappings</p>
                  </div>
                ) : (
                  mappings.map((mapping) => (
                    <div key={mapping.id} className="flex items-center justify-between p-4 border rounded-lg">
                      <div className="flex items-center space-x-4">
                        <IndustryIcon industry={mapping.industry} />
                        <div>
                          <p className="font-medium">{mapping.supplierCategory}</p>
                          <div className="flex items-center space-x-2 mt-1">
                            <ArrowRight className="h-3 w-3 text-muted-foreground" />
                            <span className="text-sm text-muted-foreground">{mapping.masterCategory}</span>
                          </div>
                        </div>
                      </div>
                      <div className="flex items-center space-x-3">
                        <ConfidenceIndicator confidence={mapping.confidence} />
                        {mapping.autoGenerated && (
                          <Badge variant="outline" className="text-xs">
                            <Brain className="mr-1 h-3 w-3" />
                            Auto
                          </Badge>
                        )}
                      </div>
                    </div>
                  ))
                )}
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="conflicts" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center space-x-2">
                <AlertTriangle className="h-5 w-5 text-yellow-500" />
                <span>Category Conflicts</span>
              </CardTitle>
              <CardDescription>
                Resolve mapping conflicts between different suppliers
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                {conflictsLoading ? (
                  <div className="flex items-center space-x-2">
                    <RefreshCw className="h-4 w-4 animate-spin" />
                    <span>Checking for conflicts...</span>
                  </div>
                ) : conflicts.length === 0 ? (
                  <div className="text-center py-8">
                    <CheckCircle className="mx-auto h-12 w-12 text-green-500 mb-3" />
                    <p className="text-muted-foreground">No conflicts detected</p>
                    <p className="text-sm text-muted-foreground mt-1">
                      Conflicts will appear here when multiple suppliers have different category structures
                    </p>
                  </div>
                ) : (
                  conflicts.map((conflict, index) => (
                    <div key={index} className="border rounded-lg p-4 space-y-3">
                      <div className="flex items-center justify-between">
                        <h4 className="font-medium">{conflict.supplierCategory}</h4>
                        <Badge variant="destructive">Conflict</Badge>
                      </div>
                      <p className="text-sm text-muted-foreground">
                        Used by: {conflict.suppliers.join(', ')}
                      </p>
                      <div className="space-y-2">
                        <p className="text-sm font-medium">Suggested mappings:</p>
                        {conflict.suggestions.map((suggestion, idx) => (
                          <div key={idx} className="flex items-center justify-between p-2 bg-gray-50 rounded">
                            <span className="text-sm">{suggestion}</span>
                            <Button 
                              size="sm" 
                              variant="outline"
                              onClick={() => manualMapMutation.mutate({ 
                                supplierCategory: conflict.supplierCategory, 
                                masterCategory: suggestion 
                              })}
                            >
                              Use This
                            </Button>
                          </div>
                        ))}
                      </div>
                      <div className="flex space-x-2 pt-2">
                        <Button 
                          size="sm" 
                          onClick={() => autoResolveMutation.mutate(conflict.supplierCategory)}
                          disabled={autoResolveMutation.isPending}
                        >
                          <Brain className="mr-2 h-4 w-4" />
                          Auto-Resolve
                        </Button>
                        <Button size="sm" variant="outline">
                          Manual Review
                        </Button>
                      </div>
                    </div>
                  ))
                )}
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="intelligence" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center space-x-2">
                <Brain className="h-5 w-5" />
                <span>AI Intelligence Settings</span>
              </CardTitle>
              <CardDescription>
                Configure automatic category mapping intelligence
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-6">
                <div className="flex items-center justify-between">
                  <div>
                    <h4 className="font-medium">Auto-resolve conflicts</h4>
                    <p className="text-sm text-muted-foreground">
                      Automatically resolve category conflicts with high confidence
                    </p>
                  </div>
                  <Button variant="outline">
                    <RefreshCw className="mr-2 h-4 w-4" />
                    Configure
                  </Button>
                </div>
                <Separator />
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div className="space-y-2">
                    <label className="text-sm font-medium">Confidence Threshold</label>
                    <Progress value={85} className="w-full" />
                    <p className="text-xs text-muted-foreground">85% - Auto-resolve above this confidence</p>
                  </div>
                  <div className="space-y-2">
                    <label className="text-sm font-medium">Industry Detection</label>
                    <Progress value={92} className="w-full" />
                    <p className="text-xs text-muted-foreground">92% - Industry classification accuracy</p>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  );
};

export default CategoryMappingIntelligence;